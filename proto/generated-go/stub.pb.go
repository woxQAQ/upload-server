// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: stub.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PreSignRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreSignRequest) Reset() {
	*x = PreSignRequest{}
	mi := &file_stub_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSignRequest) ProtoMessage() {}

func (x *PreSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stub_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSignRequest.ProtoReflect.Descriptor instead.
func (*PreSignRequest) Descriptor() ([]byte, []int) {
	return file_stub_proto_rawDescGZIP(), []int{0}
}

type PreSignResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreSignResponse) Reset() {
	*x = PreSignResponse{}
	mi := &file_stub_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSignResponse) ProtoMessage() {}

func (x *PreSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stub_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSignResponse.ProtoReflect.Descriptor instead.
func (*PreSignResponse) Descriptor() ([]byte, []int) {
	return file_stub_proto_rawDescGZIP(), []int{1}
}

func (x *PreSignResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type SubmitTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kind          TaskKind               `protobuf:"varint,1,opt,name=kind,proto3,enum=woxQAQ.v1.TaskKind" json:"kind,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitTaskRequest) Reset() {
	*x = SubmitTaskRequest{}
	mi := &file_stub_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitTaskRequest) ProtoMessage() {}

func (x *SubmitTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stub_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitTaskRequest.ProtoReflect.Descriptor instead.
func (*SubmitTaskRequest) Descriptor() ([]byte, []int) {
	return file_stub_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitTaskRequest) GetKind() TaskKind {
	if x != nil {
		return x.Kind
	}
	return TaskKind_DATA_IMPORT
}

type ApproveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProgressId    uint64                 `protobuf:"varint,1,opt,name=progressId,proto3" json:"progressId,omitempty"`
	Approver      string                 `protobuf:"bytes,2,opt,name=approver,proto3" json:"approver,omitempty"`
	Option        string                 `protobuf:"bytes,3,opt,name=option,proto3" json:"option,omitempty"`
	Exector       Exec                   `protobuf:"varint,4,opt,name=exector,proto3,enum=woxQAQ.v1.Exec" json:"exector,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApproveRequest) Reset() {
	*x = ApproveRequest{}
	mi := &file_stub_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveRequest) ProtoMessage() {}

func (x *ApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stub_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveRequest.ProtoReflect.Descriptor instead.
func (*ApproveRequest) Descriptor() ([]byte, []int) {
	return file_stub_proto_rawDescGZIP(), []int{3}
}

func (x *ApproveRequest) GetProgressId() uint64 {
	if x != nil {
		return x.ProgressId
	}
	return 0
}

func (x *ApproveRequest) GetApprover() string {
	if x != nil {
		return x.Approver
	}
	return ""
}

func (x *ApproveRequest) GetOption() string {
	if x != nil {
		return x.Option
	}
	return ""
}

func (x *ApproveRequest) GetExector() Exec {
	if x != nil {
		return x.Exector
	}
	return Exec_EXEC_APPROVER
}

var File_stub_proto protoreflect.FileDescriptor

const file_stub_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"stub.proto\x12\twoxQAQ.v1\x1a\x1cgoogle/api/annotations.proto\x1a\n" +
	"enum.proto\"\x10\n" +
	"\x0ePreSignRequest\"#\n" +
	"\x0fPreSignResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"<\n" +
	"\x11SubmitTaskRequest\x12'\n" +
	"\x04kind\x18\x01 \x01(\x0e2\x13.woxQAQ.v1.TaskKindR\x04kind\"\x8f\x01\n" +
	"\x0eApproveRequest\x12\x1e\n" +
	"\n" +
	"progressId\x18\x01 \x01(\x04R\n" +
	"progressId\x12\x1a\n" +
	"\bapprover\x18\x02 \x01(\tR\bapprover\x12\x16\n" +
	"\x06option\x18\x03 \x01(\tR\x06option\x12)\n" +
	"\aexector\x18\x04 \x01(\x0e2\x0f.woxQAQ.v1.ExecR\aexector2t\n" +
	"\rUploadService\x12c\n" +
	"\x15GetDataFilePreSignUrl\x12\x19.woxQAQ.v1.PreSignRequest\x1a\x1a.woxQAQ.v1.PreSignResponse\"\x13\x82\xd3\xe4\x93\x02\r\x12\v/v1/presignB\x0eZ\fgenerated/v1b\x06proto3"

var (
	file_stub_proto_rawDescOnce sync.Once
	file_stub_proto_rawDescData []byte
)

func file_stub_proto_rawDescGZIP() []byte {
	file_stub_proto_rawDescOnce.Do(func() {
		file_stub_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_stub_proto_rawDesc), len(file_stub_proto_rawDesc)))
	})
	return file_stub_proto_rawDescData
}

var file_stub_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_stub_proto_goTypes = []any{
	(*PreSignRequest)(nil),    // 0: woxQAQ.v1.PreSignRequest
	(*PreSignResponse)(nil),   // 1: woxQAQ.v1.PreSignResponse
	(*SubmitTaskRequest)(nil), // 2: woxQAQ.v1.SubmitTaskRequest
	(*ApproveRequest)(nil),    // 3: woxQAQ.v1.ApproveRequest
	(TaskKind)(0),             // 4: woxQAQ.v1.TaskKind
	(Exec)(0),                 // 5: woxQAQ.v1.Exec
}
var file_stub_proto_depIdxs = []int32{
	4, // 0: woxQAQ.v1.SubmitTaskRequest.kind:type_name -> woxQAQ.v1.TaskKind
	5, // 1: woxQAQ.v1.ApproveRequest.exector:type_name -> woxQAQ.v1.Exec
	0, // 2: woxQAQ.v1.UploadService.GetDataFilePreSignUrl:input_type -> woxQAQ.v1.PreSignRequest
	1, // 3: woxQAQ.v1.UploadService.GetDataFilePreSignUrl:output_type -> woxQAQ.v1.PreSignResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_stub_proto_init() }
func file_stub_proto_init() {
	if File_stub_proto != nil {
		return
	}
	file_enum_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_stub_proto_rawDesc), len(file_stub_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stub_proto_goTypes,
		DependencyIndexes: file_stub_proto_depIdxs,
		MessageInfos:      file_stub_proto_msgTypes,
	}.Build()
	File_stub_proto = out.File
	file_stub_proto_goTypes = nil
	file_stub_proto_depIdxs = nil
}
