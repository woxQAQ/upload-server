// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: v1/issue.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Exec int32

const (
	Exec_EXEC_UNSPECIFIED Exec = 0
	Exec_APPROVER         Exec = 1
	Exec_COMMITTER        Exec = 2
	Exec_AUTO             Exec = 3
)

// Enum value maps for Exec.
var (
	Exec_name = map[int32]string{
		0: "EXEC_UNSPECIFIED",
		1: "APPROVER",
		2: "COMMITTER",
		3: "AUTO",
	}
	Exec_value = map[string]int32{
		"EXEC_UNSPECIFIED": 0,
		"APPROVER":         1,
		"COMMITTER":        2,
		"AUTO":             3,
	}
)

func (x Exec) Enum() *Exec {
	p := new(Exec)
	*p = x
	return p
}

func (x Exec) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Exec) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_issue_proto_enumTypes[0].Descriptor()
}

func (Exec) Type() protoreflect.EnumType {
	return &file_v1_issue_proto_enumTypes[0]
}

func (x Exec) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Exec.Descriptor instead.
func (Exec) EnumDescriptor() ([]byte, []int) {
	return file_v1_issue_proto_rawDescGZIP(), []int{0}
}

type DataExportDetail_Encoding int32

const (
	DataExportDetail_ENCODING_UNSPECIFIED DataExportDetail_Encoding = 0
	DataExportDetail_UTF8                 DataExportDetail_Encoding = 1
	DataExportDetail_GBK                  DataExportDetail_Encoding = 2
)

// Enum value maps for DataExportDetail_Encoding.
var (
	DataExportDetail_Encoding_name = map[int32]string{
		0: "ENCODING_UNSPECIFIED",
		1: "UTF8",
		2: "GBK",
	}
	DataExportDetail_Encoding_value = map[string]int32{
		"ENCODING_UNSPECIFIED": 0,
		"UTF8":                 1,
		"GBK":                  2,
	}
)

func (x DataExportDetail_Encoding) Enum() *DataExportDetail_Encoding {
	p := new(DataExportDetail_Encoding)
	*p = x
	return p
}

func (x DataExportDetail_Encoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataExportDetail_Encoding) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_issue_proto_enumTypes[1].Descriptor()
}

func (DataExportDetail_Encoding) Type() protoreflect.EnumType {
	return &file_v1_issue_proto_enumTypes[1]
}

func (x DataExportDetail_Encoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataExportDetail_Encoding.Descriptor instead.
func (DataExportDetail_Encoding) EnumDescriptor() ([]byte, []int) {
	return file_v1_issue_proto_rawDescGZIP(), []int{0, 0}
}

type DataExportDetail_ExportMethod int32

const (
	DataExportDetail_EXPORT_METHOD_UNSPECIFIED DataExportDetail_ExportMethod = 0
	DataExportDetail_SQL                       DataExportDetail_ExportMethod = 1
	DataExportDetail_TABLES                    DataExportDetail_ExportMethod = 2
)

// Enum value maps for DataExportDetail_ExportMethod.
var (
	DataExportDetail_ExportMethod_name = map[int32]string{
		0: "EXPORT_METHOD_UNSPECIFIED",
		1: "SQL",
		2: "TABLES",
	}
	DataExportDetail_ExportMethod_value = map[string]int32{
		"EXPORT_METHOD_UNSPECIFIED": 0,
		"SQL":                       1,
		"TABLES":                    2,
	}
)

func (x DataExportDetail_ExportMethod) Enum() *DataExportDetail_ExportMethod {
	p := new(DataExportDetail_ExportMethod)
	*p = x
	return p
}

func (x DataExportDetail_ExportMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataExportDetail_ExportMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_issue_proto_enumTypes[2].Descriptor()
}

func (DataExportDetail_ExportMethod) Type() protoreflect.EnumType {
	return &file_v1_issue_proto_enumTypes[2]
}

func (x DataExportDetail_ExportMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataExportDetail_ExportMethod.Descriptor instead.
func (DataExportDetail_ExportMethod) EnumDescriptor() ([]byte, []int) {
	return file_v1_issue_proto_rawDescGZIP(), []int{0, 1}
}

type DataExportDetail_ExportType int32

const (
	DataExportDetail_EXPORT_TYPE_UNSPECIFIED DataExportDetail_ExportType = 0
	DataExportDetail_CSV                     DataExportDetail_ExportType = 1
	DataExportDetail_EXCEL                   DataExportDetail_ExportType = 2
)

// Enum value maps for DataExportDetail_ExportType.
var (
	DataExportDetail_ExportType_name = map[int32]string{
		0: "EXPORT_TYPE_UNSPECIFIED",
		1: "CSV",
		2: "EXCEL",
	}
	DataExportDetail_ExportType_value = map[string]int32{
		"EXPORT_TYPE_UNSPECIFIED": 0,
		"CSV":                     1,
		"EXCEL":                   2,
	}
)

func (x DataExportDetail_ExportType) Enum() *DataExportDetail_ExportType {
	p := new(DataExportDetail_ExportType)
	*p = x
	return p
}

func (x DataExportDetail_ExportType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataExportDetail_ExportType) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_issue_proto_enumTypes[3].Descriptor()
}

func (DataExportDetail_ExportType) Type() protoreflect.EnumType {
	return &file_v1_issue_proto_enumTypes[3]
}

func (x DataExportDetail_ExportType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataExportDetail_ExportType.Descriptor instead.
func (DataExportDetail_ExportType) EnumDescriptor() ([]byte, []int) {
	return file_v1_issue_proto_rawDescGZIP(), []int{0, 2}
}

type DataExportDetail_ExportContent int32

const (
	DataExportDetail_EXPORT_CONTENT_UNSPECIFIED DataExportDetail_ExportContent = 0
	DataExportDetail_DATA                       DataExportDetail_ExportContent = 1
	DataExportDetail_STRUCT                     DataExportDetail_ExportContent = 2
	DataExportDetail_ALL                        DataExportDetail_ExportContent = 3
)

// Enum value maps for DataExportDetail_ExportContent.
var (
	DataExportDetail_ExportContent_name = map[int32]string{
		0: "EXPORT_CONTENT_UNSPECIFIED",
		1: "DATA",
		2: "STRUCT",
		3: "ALL",
	}
	DataExportDetail_ExportContent_value = map[string]int32{
		"EXPORT_CONTENT_UNSPECIFIED": 0,
		"DATA":                       1,
		"STRUCT":                     2,
		"ALL":                        3,
	}
)

func (x DataExportDetail_ExportContent) Enum() *DataExportDetail_ExportContent {
	p := new(DataExportDetail_ExportContent)
	*p = x
	return p
}

func (x DataExportDetail_ExportContent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataExportDetail_ExportContent) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_issue_proto_enumTypes[4].Descriptor()
}

func (DataExportDetail_ExportContent) Type() protoreflect.EnumType {
	return &file_v1_issue_proto_enumTypes[4]
}

func (x DataExportDetail_ExportContent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataExportDetail_ExportContent.Descriptor instead.
func (DataExportDetail_ExportContent) EnumDescriptor() ([]byte, []int) {
	return file_v1_issue_proto_rawDescGZIP(), []int{0, 3}
}

type DataExportDetail struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Database string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	// Types that are valid to be assigned to ExportDetail:
	//
	//	*DataExportDetail_Ebs
	//	*DataExportDetail_Eatt
	ExportDetail  isDataExportDetail_ExportDetail `protobuf_oneof:"export_detail"`
	Type          DataExportDetail_ExportType     `protobuf:"varint,4,opt,name=type,proto3,enum=DataExportDetail_ExportType" json:"type,omitempty"`
	Encoding      DataExportDetail_Encoding       `protobuf:"varint,5,opt,name=encoding,proto3,enum=DataExportDetail_Encoding" json:"encoding,omitempty"`
	ExportReason  string                          `protobuf:"bytes,6,opt,name=export_reason,json=exportReason,proto3" json:"export_reason,omitempty"`
	Exector       Exec                            `protobuf:"varint,7,opt,name=exector,proto3,enum=Exec" json:"exector,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataExportDetail) Reset() {
	*x = DataExportDetail{}
	mi := &file_v1_issue_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataExportDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataExportDetail) ProtoMessage() {}

func (x *DataExportDetail) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issue_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataExportDetail.ProtoReflect.Descriptor instead.
func (*DataExportDetail) Descriptor() ([]byte, []int) {
	return file_v1_issue_proto_rawDescGZIP(), []int{0}
}

func (x *DataExportDetail) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DataExportDetail) GetExportDetail() isDataExportDetail_ExportDetail {
	if x != nil {
		return x.ExportDetail
	}
	return nil
}

func (x *DataExportDetail) GetEbs() *DataExportDetail_ExportBySQL {
	if x != nil {
		if x, ok := x.ExportDetail.(*DataExportDetail_Ebs); ok {
			return x.Ebs
		}
	}
	return nil
}

func (x *DataExportDetail) GetEatt() *DataExportDetail_ExportAccordingToTable {
	if x != nil {
		if x, ok := x.ExportDetail.(*DataExportDetail_Eatt); ok {
			return x.Eatt
		}
	}
	return nil
}

func (x *DataExportDetail) GetType() DataExportDetail_ExportType {
	if x != nil {
		return x.Type
	}
	return DataExportDetail_EXPORT_TYPE_UNSPECIFIED
}

func (x *DataExportDetail) GetEncoding() DataExportDetail_Encoding {
	if x != nil {
		return x.Encoding
	}
	return DataExportDetail_ENCODING_UNSPECIFIED
}

func (x *DataExportDetail) GetExportReason() string {
	if x != nil {
		return x.ExportReason
	}
	return ""
}

func (x *DataExportDetail) GetExector() Exec {
	if x != nil {
		return x.Exector
	}
	return Exec_EXEC_UNSPECIFIED
}

type isDataExportDetail_ExportDetail interface {
	isDataExportDetail_ExportDetail()
}

type DataExportDetail_Ebs struct {
	Ebs *DataExportDetail_ExportBySQL `protobuf:"bytes,2,opt,name=ebs,proto3,oneof"`
}

type DataExportDetail_Eatt struct {
	Eatt *DataExportDetail_ExportAccordingToTable `protobuf:"bytes,3,opt,name=eatt,proto3,oneof"`
}

func (*DataExportDetail_Ebs) isDataExportDetail_ExportDetail() {}

func (*DataExportDetail_Eatt) isDataExportDetail_ExportDetail() {}

type DataExportDetail_ExportAccordingToTable struct {
	state         protoimpl.MessageState                                 `protogen:"open.v1"`
	ExportAll     bool                                                   `protobuf:"varint,1,opt,name=export_all,json=exportAll,proto3" json:"export_all,omitempty"`
	Content       DataExportDetail_ExportContent                         `protobuf:"varint,2,opt,name=content,proto3,enum=DataExportDetail_ExportContent" json:"content,omitempty"`
	Option        []*DataExportDetail_ExportAccordingToTable_TableOption `protobuf:"bytes,3,rep,name=option,proto3" json:"option,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataExportDetail_ExportAccordingToTable) Reset() {
	*x = DataExportDetail_ExportAccordingToTable{}
	mi := &file_v1_issue_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataExportDetail_ExportAccordingToTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataExportDetail_ExportAccordingToTable) ProtoMessage() {}

func (x *DataExportDetail_ExportAccordingToTable) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issue_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataExportDetail_ExportAccordingToTable.ProtoReflect.Descriptor instead.
func (*DataExportDetail_ExportAccordingToTable) Descriptor() ([]byte, []int) {
	return file_v1_issue_proto_rawDescGZIP(), []int{0, 0}
}

func (x *DataExportDetail_ExportAccordingToTable) GetExportAll() bool {
	if x != nil {
		return x.ExportAll
	}
	return false
}

func (x *DataExportDetail_ExportAccordingToTable) GetContent() DataExportDetail_ExportContent {
	if x != nil {
		return x.Content
	}
	return DataExportDetail_EXPORT_CONTENT_UNSPECIFIED
}

func (x *DataExportDetail_ExportAccordingToTable) GetOption() []*DataExportDetail_ExportAccordingToTable_TableOption {
	if x != nil {
		return x.Option
	}
	return nil
}

type DataExportDetail_ExportBySQL struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Statement     string                 `protobuf:"bytes,1,opt,name=statement,proto3" json:"statement,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataExportDetail_ExportBySQL) Reset() {
	*x = DataExportDetail_ExportBySQL{}
	mi := &file_v1_issue_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataExportDetail_ExportBySQL) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataExportDetail_ExportBySQL) ProtoMessage() {}

func (x *DataExportDetail_ExportBySQL) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issue_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataExportDetail_ExportBySQL.ProtoReflect.Descriptor instead.
func (*DataExportDetail_ExportBySQL) Descriptor() ([]byte, []int) {
	return file_v1_issue_proto_rawDescGZIP(), []int{0, 1}
}

func (x *DataExportDetail_ExportBySQL) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

type DataExportDetail_ExportAccordingToTable_TableOption struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Table         string                 `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	AllField      bool                   `protobuf:"varint,2,opt,name=all_field,json=allField,proto3" json:"all_field,omitempty"`
	Fields        []string               `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty"`
	Filter        string                 `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataExportDetail_ExportAccordingToTable_TableOption) Reset() {
	*x = DataExportDetail_ExportAccordingToTable_TableOption{}
	mi := &file_v1_issue_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataExportDetail_ExportAccordingToTable_TableOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataExportDetail_ExportAccordingToTable_TableOption) ProtoMessage() {}

func (x *DataExportDetail_ExportAccordingToTable_TableOption) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issue_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataExportDetail_ExportAccordingToTable_TableOption.ProtoReflect.Descriptor instead.
func (*DataExportDetail_ExportAccordingToTable_TableOption) Descriptor() ([]byte, []int) {
	return file_v1_issue_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *DataExportDetail_ExportAccordingToTable_TableOption) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *DataExportDetail_ExportAccordingToTable_TableOption) GetAllField() bool {
	if x != nil {
		return x.AllField
	}
	return false
}

func (x *DataExportDetail_ExportAccordingToTable_TableOption) GetFields() []string {
	if x != nil {
		return x.Fields
	}
	return nil
}

func (x *DataExportDetail_ExportAccordingToTable_TableOption) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

var File_v1_issue_proto protoreflect.FileDescriptor

const file_v1_issue_proto_rawDesc = "" +
	"\n" +
	"\x0ev1/issue.proto\"\xd0\a\n" +
	"\x10DataExportDetail\x12\x1a\n" +
	"\bdatabase\x18\x01 \x01(\tR\bdatabase\x121\n" +
	"\x03ebs\x18\x02 \x01(\v2\x1d.DataExportDetail.ExportBySQLH\x00R\x03ebs\x12>\n" +
	"\x04eatt\x18\x03 \x01(\v2(.DataExportDetail.ExportAccordingToTableH\x00R\x04eatt\x120\n" +
	"\x04type\x18\x04 \x01(\x0e2\x1c.DataExportDetail.ExportTypeR\x04type\x126\n" +
	"\bencoding\x18\x05 \x01(\x0e2\x1a.DataExportDetail.EncodingR\bencoding\x12#\n" +
	"\rexport_reason\x18\x06 \x01(\tR\fexportReason\x12\x1f\n" +
	"\aexector\x18\a \x01(\x0e2\x05.ExecR\aexector\x1a\xb2\x02\n" +
	"\x16ExportAccordingToTable\x12\x1d\n" +
	"\n" +
	"export_all\x18\x01 \x01(\bR\texportAll\x129\n" +
	"\acontent\x18\x02 \x01(\x0e2\x1f.DataExportDetail.ExportContentR\acontent\x12L\n" +
	"\x06option\x18\x03 \x03(\v24.DataExportDetail.ExportAccordingToTable.TableOptionR\x06option\x1ap\n" +
	"\vTableOption\x12\x14\n" +
	"\x05table\x18\x01 \x01(\tR\x05table\x12\x1b\n" +
	"\tall_field\x18\x02 \x01(\bR\ballField\x12\x16\n" +
	"\x06fields\x18\x03 \x03(\tR\x06fields\x12\x16\n" +
	"\x06filter\x18\x04 \x01(\tR\x06filter\x1a+\n" +
	"\vExportBySQL\x12\x1c\n" +
	"\tstatement\x18\x01 \x01(\tR\tstatement\"7\n" +
	"\bEncoding\x12\x18\n" +
	"\x14ENCODING_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04UTF8\x10\x01\x12\a\n" +
	"\x03GBK\x10\x02\"B\n" +
	"\fExportMethod\x12\x1d\n" +
	"\x19EXPORT_METHOD_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03SQL\x10\x01\x12\n" +
	"\n" +
	"\x06TABLES\x10\x02\"=\n" +
	"\n" +
	"ExportType\x12\x1b\n" +
	"\x17EXPORT_TYPE_UNSPECIFIED\x10\x00\x12\a\n" +
	"\x03CSV\x10\x01\x12\t\n" +
	"\x05EXCEL\x10\x02\"N\n" +
	"\rExportContent\x12\x1e\n" +
	"\x1aEXPORT_CONTENT_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04DATA\x10\x01\x12\n" +
	"\n" +
	"\x06STRUCT\x10\x02\x12\a\n" +
	"\x03ALL\x10\x03B\x0f\n" +
	"\rexport_detail*C\n" +
	"\x04Exec\x12\x14\n" +
	"\x10EXEC_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bAPPROVER\x10\x01\x12\r\n" +
	"\tCOMMITTER\x10\x02\x12\b\n" +
	"\x04AUTO\x10\x03B\x0eZ\fgenerated/v1b\x06proto3"

var (
	file_v1_issue_proto_rawDescOnce sync.Once
	file_v1_issue_proto_rawDescData []byte
)

func file_v1_issue_proto_rawDescGZIP() []byte {
	file_v1_issue_proto_rawDescOnce.Do(func() {
		file_v1_issue_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_issue_proto_rawDesc), len(file_v1_issue_proto_rawDesc)))
	})
	return file_v1_issue_proto_rawDescData
}

var file_v1_issue_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_v1_issue_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_issue_proto_goTypes = []any{
	(Exec)(0),                                                   // 0: Exec
	(DataExportDetail_Encoding)(0),                              // 1: DataExportDetail.Encoding
	(DataExportDetail_ExportMethod)(0),                          // 2: DataExportDetail.ExportMethod
	(DataExportDetail_ExportType)(0),                            // 3: DataExportDetail.ExportType
	(DataExportDetail_ExportContent)(0),                         // 4: DataExportDetail.ExportContent
	(*DataExportDetail)(nil),                                    // 5: DataExportDetail
	(*DataExportDetail_ExportAccordingToTable)(nil),             // 6: DataExportDetail.ExportAccordingToTable
	(*DataExportDetail_ExportBySQL)(nil),                        // 7: DataExportDetail.ExportBySQL
	(*DataExportDetail_ExportAccordingToTable_TableOption)(nil), // 8: DataExportDetail.ExportAccordingToTable.TableOption
}
var file_v1_issue_proto_depIdxs = []int32{
	7, // 0: DataExportDetail.ebs:type_name -> DataExportDetail.ExportBySQL
	6, // 1: DataExportDetail.eatt:type_name -> DataExportDetail.ExportAccordingToTable
	3, // 2: DataExportDetail.type:type_name -> DataExportDetail.ExportType
	1, // 3: DataExportDetail.encoding:type_name -> DataExportDetail.Encoding
	0, // 4: DataExportDetail.exector:type_name -> Exec
	4, // 5: DataExportDetail.ExportAccordingToTable.content:type_name -> DataExportDetail.ExportContent
	8, // 6: DataExportDetail.ExportAccordingToTable.option:type_name -> DataExportDetail.ExportAccordingToTable.TableOption
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_v1_issue_proto_init() }
func file_v1_issue_proto_init() {
	if File_v1_issue_proto != nil {
		return
	}
	file_v1_issue_proto_msgTypes[0].OneofWrappers = []any{
		(*DataExportDetail_Ebs)(nil),
		(*DataExportDetail_Eatt)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_issue_proto_rawDesc), len(file_v1_issue_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_issue_proto_goTypes,
		DependencyIndexes: file_v1_issue_proto_depIdxs,
		EnumInfos:         file_v1_issue_proto_enumTypes,
		MessageInfos:      file_v1_issue_proto_msgTypes,
	}.Build()
	File_v1_issue_proto = out.File
	file_v1_issue_proto_goTypes = nil
	file_v1_issue_proto_depIdxs = nil
}
