syntax = "proto3";
package woxqaq.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";

option go_package = "generated/v1";

enum Encoding {
  ENCODING_UNSPECIFIED = 0;
  ENCODING_UTF8 = 1;
  ENCODING_GBK = 2;
}

enum TriggerKind {
  TRIGGER_KIND_UNSPECIFIED = 0;
  TRIGGER_KIND_CURRENT = 1;
  TRIGGER_KIND_CRON = 2;
}
enum ExportMethod {
  EXPORT_METHOD_UNSPECIFIED = 0;
  EXPORT_METHOD_SQL = 1;
  EXPORT_METHOD_TABLES = 2;
}

enum ExportContent {
  EXPORT_CONTENT_UNSPECIFIED = 0;
  EXPORT_CONTENT_DATA = 1;
  EXPORT_CONTENT_STRUCT = 2;
  EXPORT_CONTENT_ALL = 3;
}

enum ExportType {
  EXPORT_TYPE_UNSPECIFIED = 0;
  EXPORT_TYPE_CSV = 1;
  EXPORT_TYPE_EXCEL = 2;
}

enum Exec {
  EXEC_UNSPECIFIED = 0;
  EXEC_APPROVER = 1;
  EXEC_COMMITTER = 2;
  EXEC_AUTO = 3;
}

enum TaskKind {
  TASK_KIND_UNSPECIFIED = 0;
  TASK_KIND_DATA_IMPORT = 1;
  TASK_KIND_DATA_EXPORT = 2;
  TASK_KIND_DATA_GENERATE = 3;
}

enum TaskStatus {
  TASK_STATUS_UNSPECIFIED = 0;
  TASK_STATUS_NOT_START = 1;
  TASK_STATUS_PRE_CHECK = 2;
  TASK_STATUS_PRE_CHECK_SUCCESS = 3;
  TASK_STATUS_PRE_CHECK_FAILED = 4;
  TASK_STATUS_APPROVING = 5;
  TASK_STATUS_APPROVED = 6;
  TASK_STATUS_NOT_APPROVED = 7;
}

enum TaskRole {
  TASK_ROLE_UNSPECIFIED = 0;
  TASK_ROLE_COMMITTER = 1;
  TASK_ROLE_TO_APPROVE = 2;
  TASK_ROLE_TO_EXECUTE = 3;
  TASK_ROLE_APPROVED = 4;
  TASK_ROLE_EXECUTED = 5;
}

message TaskDetail {
  DataExportDetail ded = 1;
}

message Task {
  option (google.api.resource) = {
    type: "woxQAQ/Issue"
    pattern: "org/{orgName}/instance/{instanceName}/task/{taskId}"
    pattern: "org/{orgName}/instance/{instanceName}"
    pattern: "org/{orgName}/task/{taskId}"
    pattern: "org/{orgName}"
  };
  string id = 1;
  string dsn = 2;
  TaskKind kind = 3;
  string database = 4;
  google.protobuf.Timestamp create_time = 5;
  google.protobuf.Timestamp update_time = 6;
  string submitter = 7;
  TaskStatus status = 8;
  TaskDetail detail = 9;
}

message ExportBySQL {
  string statement = 1;
}

message ExportAccordingToTable {
  bool export_all = 1;
  ExportContent content = 2;
  message TableOption {
    string table = 1;
    bool all_field = 2;
    repeated string fields = 3;
    string filter = 4;
  }
  repeated TableOption option = 3;
}

message DataExportDetail {
  string database = 1;

  oneof export_detail {
    ExportBySQL ebs = 2;
    ExportAccordingToTable eatt = 3;
  }

  ExportType type = 4;
  Encoding encoding = 5;
  string export_reason = 6;
  Exec exector = 7;
}

message SubmitTaskRequest {
  string name = 1;
  TaskKind kind = 2;
  TaskDetail detail = 3;
}

message SubmitTaskResponse {
  bool ok = 1;
  string task_id = 2;
}

message GetTaskDetailRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "woxQAQ/Issue"}
  ];
}

message GetTaskDetailResponse {
  bool ok = 1;
  oneof data {
    DataExportDetail ded = 4;
  }
}

message ApproveRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "woxQAQ/Issue"}
  ];
  message approveMeta {
    string approver = 1;
    string comment = 2;
  }
  approveMeta meta = 2;
}

message ApproveResponse {
  bool ok = 1;
}

message RejectRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "woxQAQ/Issue"}
  ];
  message approveMeta {
    string approver = 1;
    string comment = 2;
  }
  approveMeta meta = 2;
}

message RejectResponse {
  bool ok = 1;
}

message ListTaskRequest {
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "woxQAQ/Instance"}
  ];
  TaskKind kind = 2;
  int32 current = 3;
  int32 page_size = 4;
  TaskStatus status = 5;
  TaskRole role = 7;
}

message ListTaskResponse {
  bool ok = 1;
  repeated Task data = 2;
  int32 page_size = 3;
  int32 total = 4;
}

service TaskService {
  rpc GetTaskDetail(GetTaskDetailRequest) returns (GetTaskDetailResponse) {
    option (google.api.http) = {
      get: "/v1/{name=org/*/instance/*/task/*}"

      additional_bindings: {get: "/v1/{name=org/*/task/*}"}
    };
  }
  rpc ListTask(ListTaskRequest) returns (ListTaskResponse) {
    option (google.api.http) = {
      get: "/v1/{name=org/*/instance/*}"

      additional_bindings: {get: "/v1/{name=org/*}"}
    };
  }
  rpc SubmitTask(SubmitTaskRequest) returns (SubmitTaskResponse) {
    option (google.api.http) = {
      post: "/v1/{name=org/*/instance/*/task/*}/submit"
      body: "detail"

      additional_bindings: {
        post: "/v1/{name=org/*/task/*}/submit"
        body: "detail"
      }
    };
  }

  rpc Approve(ApproveRequest) returns (ApproveResponse) {
    option (google.api.http) = {
      put: "/v1/{name=org/*/task/*}/approve"
      body: "meta"

      additional_bindings: {
        put: "/v1/{name=org/*/instance/*/task/*}/approve"
        body: "meta"
      }
    };
  }

  rpc Reject(RejectRequest) returns (RejectResponse) {
    option (google.api.http) = {
      put: "/v1/{name=org/*/task/*}/reject"
      body: "meta"
      additional_bindings: {
        put: "/v1/{name=org/*/instance/*/task/*}/reject"
        body: "meta"
      }
    };
  }
}
