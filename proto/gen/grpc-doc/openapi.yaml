# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/notification:
        get:
            tags:
                - NotifyServices
            operationId: NotifyServices_Notify
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/NotifyResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{orgName}/instance/{instanceName}/presign:
        get:
            tags:
                - UploadService
            operationId: UploadService_PreSign
            parameters:
                - name: orgName
                  in: path
                  required: true
                  schema:
                    type: string
                - name: instanceName
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PreSignResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}:
        get:
            tags:
                - TaskService
            operationId: TaskService_ListTask
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: kind
                  in: query
                  schema:
                    enum:
                        - TASK_KIND_UNSPECIFIED
                        - TASK_KIND_DATA_IMPORT
                        - TASK_KIND_DATA_EXPORT
                        - TASK_KIND_DATA_GENERATE
                    type: string
                    format: enum
                - name: current
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: status
                  in: query
                  schema:
                    enum:
                        - TASK_STATUS_UNSPECIFIED
                        - TASK_STATUS_NOT_START
                        - TASK_STATUS_PRE_CHECK
                        - TASK_STATUS_PRE_CHECK_SUCCESS
                        - TASK_STATUS_PRE_CHECK_FAILED
                        - TASK_STATUS_APPROVING
                        - TASK_STATUS_APPROVED
                        - TASK_STATUS_NOT_APPROVED
                    type: string
                    format: enum
                - name: role
                  in: query
                  schema:
                    enum:
                        - TASK_ROLE_UNSPECIFIED
                        - TASK_ROLE_COMMITTER
                        - TASK_ROLE_TO_APPROVE
                        - TASK_ROLE_TO_EXECUTE
                        - TASK_ROLE_APPROVED
                        - TASK_ROLE_EXECUTED
                    type: string
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTaskResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/instance/{instance}:
        get:
            tags:
                - TaskService
            operationId: TaskService_ListTask
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: instance
                  in: path
                  description: The instance id.
                  required: true
                  schema:
                    type: string
                - name: kind
                  in: query
                  schema:
                    enum:
                        - TASK_KIND_UNSPECIFIED
                        - TASK_KIND_DATA_IMPORT
                        - TASK_KIND_DATA_EXPORT
                        - TASK_KIND_DATA_GENERATE
                    type: string
                    format: enum
                - name: current
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: status
                  in: query
                  schema:
                    enum:
                        - TASK_STATUS_UNSPECIFIED
                        - TASK_STATUS_NOT_START
                        - TASK_STATUS_PRE_CHECK
                        - TASK_STATUS_PRE_CHECK_SUCCESS
                        - TASK_STATUS_PRE_CHECK_FAILED
                        - TASK_STATUS_APPROVING
                        - TASK_STATUS_APPROVED
                        - TASK_STATUS_NOT_APPROVED
                    type: string
                    format: enum
                - name: role
                  in: query
                  schema:
                    enum:
                        - TASK_ROLE_UNSPECIFIED
                        - TASK_ROLE_COMMITTER
                        - TASK_ROLE_TO_APPROVE
                        - TASK_ROLE_TO_EXECUTE
                        - TASK_ROLE_APPROVED
                        - TASK_ROLE_EXECUTED
                    type: string
                    format: enum
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListTaskResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/instance/{instance}/task/{task}:
        get:
            tags:
                - TaskService
            operationId: TaskService_GetTaskDetail
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: instance
                  in: path
                  description: The instance id.
                  required: true
                  schema:
                    type: string
                - name: task
                  in: path
                  description: The task id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTaskDetailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/instance/{instance}/task/{task}/approve:
        put:
            tags:
                - TaskService
            operationId: TaskService_Approve
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: instance
                  in: path
                  description: The instance id.
                  required: true
                  schema:
                    type: string
                - name: task
                  in: path
                  description: The task id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ApproveRequest_approveMeta'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApproveResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/instance/{instance}/task/{task}/reject:
        put:
            tags:
                - TaskService
            operationId: TaskService_Reject
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: instance
                  in: path
                  description: The instance id.
                  required: true
                  schema:
                    type: string
                - name: task
                  in: path
                  description: The task id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RejectRequest_approveMeta'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RejectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/instance/{instance}/task/{task}/submit:
        post:
            tags:
                - TaskService
            operationId: TaskService_SubmitTask
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: instance
                  in: path
                  description: The instance id.
                  required: true
                  schema:
                    type: string
                - name: task
                  in: path
                  description: The task id.
                  required: true
                  schema:
                    type: string
                - name: kind
                  in: query
                  schema:
                    enum:
                        - TASK_KIND_UNSPECIFIED
                        - TASK_KIND_DATA_IMPORT
                        - TASK_KIND_DATA_EXPORT
                        - TASK_KIND_DATA_GENERATE
                    type: string
                    format: enum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TaskDetail'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubmitTaskResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/rule/{rule}:
        get:
            tags:
                - RuleService
            operationId: RuleService_GetRule
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: rule
                  in: path
                  description: The rule id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetRuleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - RuleService
            operationId: RuleService_UpdateRule
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: rule
                  in: path
                  description: The rule id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Rule'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRuleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - RuleService
            operationId: RuleService_DeleteRule
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: rule
                  in: path
                  description: The rule id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRuleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/rules:
        get:
            tags:
                - RuleService
            operationId: RuleService_ListRule
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRuleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        post:
            tags:
                - RuleService
            operationId: RuleService_CreateRule
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Rule'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRuleResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/rules/catagory:
        post:
            tags:
                - RuleService
            operationId: RuleService_AddRuleCatagory
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/AddRuleCatagoryRequest_RuleCatagoryMeta'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/AddRuleCatagoryResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/rules/preview:
        post:
            tags:
                - RuleService
            operationId: RuleService_PreviewRuleGenerate
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/PreviewRuleGenerateRequest_algoMeta'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/PreviewRuleGenerateResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/task/{task}:
        get:
            tags:
                - TaskService
            operationId: TaskService_GetTaskDetail
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: task
                  in: path
                  description: The task id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetTaskDetailResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/task/{task}/approve:
        put:
            tags:
                - TaskService
            operationId: TaskService_Approve
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: task
                  in: path
                  description: The task id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ApproveRequest_approveMeta'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ApproveResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/task/{task}/reject:
        put:
            tags:
                - TaskService
            operationId: TaskService_Reject
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: task
                  in: path
                  description: The task id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RejectRequest_approveMeta'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RejectResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /v1/org/{org}/task/{task}/submit:
        post:
            tags:
                - TaskService
            operationId: TaskService_SubmitTask
            parameters:
                - name: org
                  in: path
                  description: The org id.
                  required: true
                  schema:
                    type: string
                - name: task
                  in: path
                  description: The task id.
                  required: true
                  schema:
                    type: string
                - name: kind
                  in: query
                  schema:
                    enum:
                        - TASK_KIND_UNSPECIFIED
                        - TASK_KIND_DATA_IMPORT
                        - TASK_KIND_DATA_EXPORT
                        - TASK_KIND_DATA_GENERATE
                    type: string
                    format: enum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TaskDetail'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SubmitTaskResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        AddRuleCatagoryRequest_RuleCatagoryMeta:
            type: object
            properties:
                name:
                    type: string
                description:
                    type: string
        AddRuleCatagoryResponse:
            type: object
            properties:
                ok:
                    type: boolean
        AlgoValue:
            type: object
            properties:
                singleString:
                    type: string
                stringList:
                    $ref: '#/components/schemas/StringList'
        ApproveRequest_approveMeta:
            type: object
            properties:
                approver:
                    type: string
                comment:
                    type: string
        ApproveResponse:
            type: object
            properties:
                ok:
                    type: boolean
        CreateRuleResponse:
            type: object
            properties:
                ok:
                    type: boolean
        DataExportDetail:
            type: object
            properties:
                database:
                    type: string
                ebs:
                    $ref: '#/components/schemas/ExportBySQL'
                eatt:
                    $ref: '#/components/schemas/ExportAccordingToTable'
                type:
                    enum:
                        - EXPORT_TYPE_UNSPECIFIED
                        - EXPORT_TYPE_CSV
                        - EXPORT_TYPE_EXCEL
                    type: string
                    format: enum
                encoding:
                    enum:
                        - ENCODING_UNSPECIFIED
                        - ENCODING_UTF8
                        - ENCODING_GBK
                    type: string
                    format: enum
                exportReason:
                    type: string
                exector:
                    enum:
                        - EXEC_UNSPECIFIED
                        - EXEC_APPROVER
                        - EXEC_COMMITTER
                        - EXEC_AUTO
                    type: string
                    format: enum
        DeleteRuleResponse:
            type: object
            properties:
                ok:
                    type: boolean
        ExportAccordingToTable:
            type: object
            properties:
                exportAll:
                    type: boolean
                content:
                    enum:
                        - EXPORT_CONTENT_UNSPECIFIED
                        - EXPORT_CONTENT_DATA
                        - EXPORT_CONTENT_STRUCT
                        - EXPORT_CONTENT_ALL
                    type: string
                    format: enum
                option:
                    type: array
                    items:
                        $ref: '#/components/schemas/ExportAccordingToTable_TableOption'
        ExportAccordingToTable_TableOption:
            type: object
            properties:
                table:
                    type: string
                allField:
                    type: boolean
                fields:
                    type: array
                    items:
                        type: string
                filter:
                    type: string
        ExportBySQL:
            type: object
            properties:
                statement:
                    type: string
        GetRuleResponse:
            type: object
            properties:
                rule:
                    $ref: '#/components/schemas/Rule'
        GetTaskDetailResponse:
            type: object
            properties:
                ok:
                    type: boolean
                ded:
                    $ref: '#/components/schemas/DataExportDetail'
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListRuleResponse:
            type: object
            properties:
                rules:
                    type: array
                    items:
                        $ref: '#/components/schemas/Rule'
        ListTaskResponse:
            type: object
            properties:
                ok:
                    type: boolean
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/Task'
                pageSize:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
        NotifyResponse:
            type: object
            properties: {}
        PreSignResponse:
            type: object
            properties:
                url:
                    type: string
        PreviewRuleGenerateRequest_algoMeta:
            type: object
            properties:
                algo:
                    enum:
                        - GENERATE_ALGORITHM_UNSPECIFIED
                        - GENERATE_ALGORITHM_TIME
                        - GENERATE_ALGORITHM_TIME_DATE
                        - GENERATE_ALGORITHM_DEPARTMENT
                        - GENERATE_ALGORITHM_COMPANY
                        - GENERATE_ALGORITHM_SCRIPT
                    type: string
                    format: enum
                algoMeta:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/AlgoValue'
        PreviewRuleGenerateResponse:
            type: object
            properties:
                ok:
                    type: boolean
                value:
                    type: string
        RejectRequest_approveMeta:
            type: object
            properties:
                approver:
                    type: string
                comment:
                    type: string
        RejectResponse:
            type: object
            properties:
                ok:
                    type: boolean
        Rule:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                description:
                    type: string
                category:
                    enum:
                        - RULE_CATEGORY_UNSPECIFIED
                        - RULE_CATEGORY_PERSONAL
                        - RULE_CATEGORY_PRODUCT
                        - RULE_CATEGORY_COMMERCE
                        - RULE_CATEGORY_COMMON
                        - RULE_CATEGORY_POSITION
                        - RULE_CATEGORY_CUSTOM
                    type: string
                    format: enum
                enable:
                    type: boolean
                columnCondition:
                    type: string
                emptyRatio:
                    type: number
                    format: float
                algorithm:
                    enum:
                        - GENERATE_ALGORITHM_UNSPECIFIED
                        - GENERATE_ALGORITHM_TIME
                        - GENERATE_ALGORITHM_TIME_DATE
                        - GENERATE_ALGORITHM_DEPARTMENT
                        - GENERATE_ALGORITHM_COMPANY
                        - GENERATE_ALGORITHM_SCRIPT
                    type: string
                    format: enum
                algoMeta:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/AlgoValue'
                internal:
                    type: boolean
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        StringList:
            type: object
            properties:
                values:
                    type: array
                    items:
                        type: string
        SubmitTaskResponse:
            type: object
            properties:
                ok:
                    type: boolean
                taskId:
                    type: string
        Task:
            type: object
            properties:
                id:
                    type: string
                dsn:
                    type: string
                kind:
                    enum:
                        - TASK_KIND_UNSPECIFIED
                        - TASK_KIND_DATA_IMPORT
                        - TASK_KIND_DATA_EXPORT
                        - TASK_KIND_DATA_GENERATE
                    type: string
                    format: enum
                database:
                    type: string
                createTime:
                    type: string
                    format: date-time
                updateTime:
                    type: string
                    format: date-time
                submitter:
                    type: string
                status:
                    enum:
                        - TASK_STATUS_UNSPECIFIED
                        - TASK_STATUS_NOT_START
                        - TASK_STATUS_PRE_CHECK
                        - TASK_STATUS_PRE_CHECK_SUCCESS
                        - TASK_STATUS_PRE_CHECK_FAILED
                        - TASK_STATUS_APPROVING
                        - TASK_STATUS_APPROVED
                        - TASK_STATUS_NOT_APPROVED
                    type: string
                    format: enum
                detail:
                    $ref: '#/components/schemas/TaskDetail'
        TaskDetail:
            type: object
            properties:
                ded:
                    $ref: '#/components/schemas/DataExportDetail'
        UpdateRuleResponse:
            type: object
            properties:
                ok:
                    type: boolean
tags:
    - name: NotifyServices
    - name: RuleService
    - name: TaskService
    - name: UploadService
